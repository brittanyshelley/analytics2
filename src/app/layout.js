// import localFont from "next/font/local";
// import "./globals.css";
// import { ApplicationDataProvider } from '../hooks/useApplicationData';

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
//         <ApplicationDataProvider>
//           {children}
//         </ApplicationDataProvider>
//       </body>
//     </html>
//   );
// }


// 'use client';
// import { useState, useEffect } from "react";
// import { Open_Sans, PT_Serif } from "next/font/google";
// import "./globals.css";
// import { ApplicationDataProvider } from "../hooks/useApplicationData";

// // Load Open Sans and PT Serif fonts from Google Fonts
// const openSans = Open_Sans({
//   subsets: ["latin"],
//   variable: "--font-open-sans",
//   weight: ["400", "700"], // Normal and Bold weights
// });

// const ptSerif = PT_Serif({
//   subsets: ["latin"],
//   variable: "--font-pt-serif",
//   weight: ["400", "700"], // Normal and Bold weights
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   const [theme, setTheme] = useState("edmonton-light"); // Default theme

//   // Load saved theme from localStorage or set the default theme on mount
//   useEffect(() => {
//     const savedTheme = localStorage.getItem("theme") || "edmonton-light";
//     setTheme(savedTheme);
//     document.documentElement.setAttribute("data-theme", savedTheme);
//   }, []);

//   // Toggle between light and dark themes
//   const toggleTheme = () => {
//     const newTheme = theme === "edmonton-light" ? "edmonton-dark" : "edmonton-light";
//     setTheme(newTheme);
//     document.documentElement.setAttribute("data-theme", newTheme);
//     localStorage.setItem("theme", newTheme); // Save theme preference
//   };

//   return (
//     <html lang="en" data-theme={theme}>
//       <body
//         className={`${openSans.variable} ${ptSerif.variable} antialiased`}
//       >
//         <ApplicationDataProvider>
//           {/* Add a theme toggle button */}
//           <button
//             onClick={toggleTheme}
//             className="btn btn-secondary absolute top-4 right-4"
//           >
//             {theme === "edmonton-light" ? "Switch to Dark Mode" : "Switch to Light Mode"}
//           </button>
//           {children}
//         </ApplicationDataProvider>
//       </body>
//     </html>
//   );
// }

// import { Open_Sans, PT_Serif } from "next/font/google";
// import "./globals.css";
// import { ApplicationDataProvider } from "../hooks/useApplicationData";

// // Fonts
// const openSans = Open_Sans({
//   subsets: ["latin"],
//   variable: "--font-open-sans",
//   weight: ["400", "700"],
// });

// const ptSerif = PT_Serif({
//   subsets: ["latin"],
//   variable: "--font-pt-serif",
//   weight: ["400", "700"],
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body
//         className={`${openSans.variable} ${ptSerif.variable} antialiased`}
//       >
//         <ApplicationDataProvider>
//           {children}
//         </ApplicationDataProvider>
//       </body>
//     </html>
//   );
// }


import { Open_Sans, PT_Serif } from "next/font/google";
import "./globals.css";
import { ApplicationDataProvider } from "../hooks/useApplicationData";
import ThemeSwitcher from "../components/ThemeSwitcher"; // Import the theme switcher

// Load fonts
const openSans = Open_Sans({
  subsets: ["latin"],
  variable: "--font-open-sans",
  weight: ["400", "700"],
});

const ptSerif = PT_Serif({
  subsets: ["latin"],
  variable: "--font-pt-serif",
  weight: ["400", "700"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body
        className={`${openSans.variable} ${ptSerif.variable} antialiased`}
      >
        <ApplicationDataProvider>
          {/* Theme switcher as a client component */}
          <ThemeSwitcher />
          {children}
        </ApplicationDataProvider>
      </body>
    </html>
  );
}
